# Generated by Django 5.2.4 on 2025-08-12 19:21

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='RAGConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Nazwa konfiguracji (np. 'Fizyka kwantowa', 'Medycyna')", max_length=100, unique=True)),
                ('model_name', models.CharField(default='llama3:8b', help_text='Nazwa modelu Ollama (np. llama3:8b, mistral, codellama)', max_length=100)),
                ('ollama_url', models.URLField(default='http://localhost:11434', help_text='URL serwera Ollama')),
                ('temperature', models.FloatField(default=0.1, help_text='Temperatura generowania (0.0-2.0). Niższe wartości = bardziej deterministyczne odpowiedzi', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(2.0)])),
                ('max_tokens', models.IntegerField(default=2000, help_text='Maksymalna liczba tokenów w odpowiedzi', validators=[django.core.validators.MinValueValidator(50), django.core.validators.MaxValueValidator(8000)])),
                ('collection_name', models.CharField(default='scientific_papers', help_text='Nazwa kolekcji w bazie wektorowej Qdrant', max_length=100)),
                ('k_chunks', models.IntegerField(default=10, help_text='Liczba fragmentów tekstowych do pobrania jako kontekst', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(50)])),
                ('max_papers', models.IntegerField(default=100, help_text='Maksymalna liczba artykułów do pobrania z ArXiv', validators=[django.core.validators.MinValueValidator(5), django.core.validators.MaxValueValidator(1000)])),
                ('download_directory', models.CharField(default='archive', help_text='Katalog do zapisywania pobranych artykułów', max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=False, help_text='Czy ta konfiguracja jest aktualnie używana')),
            ],
            options={
                'verbose_name': 'Konfiguracja RAG',
                'verbose_name_plural': 'Konfiguracje RAG',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='QueryHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query_text', models.TextField(help_text='Treść zapytania użytkownika')),
                ('response_text', models.TextField(help_text='Wygenerowana odpowiedź')),
                ('processing_time', models.FloatField(blank=True, help_text='Czas przetwarzania w sekundach', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('config_used', models.ForeignKey(help_text='Konfiguracja używana do tego zapytania', null=True, on_delete=django.db.models.deletion.SET_NULL, to='research_rag.ragconfiguration')),
            ],
            options={
                'verbose_name': 'Historia zapytań',
                'verbose_name_plural': 'Historia zapytań',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DatabasePreparationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('search_query', models.TextField(help_text='Zapytanie używane do wyszukania artykułów')),
                ('status', models.CharField(choices=[('started', 'Rozpoczęto'), ('downloading', 'Pobieranie artykułów'), ('processing', 'Przetwarzanie tekstów'), ('embedding', 'Tworzenie embeddings'), ('completed', 'Zakończono pomyślnie'), ('error', 'Błąd')], default='started', max_length=20)),
                ('papers_downloaded', models.IntegerField(default=0, help_text='Liczba pobranych artykułów')),
                ('papers_processed', models.IntegerField(default=0, help_text='Liczba przetworzonych artykułów')),
                ('error_message', models.TextField(blank=True, help_text='Komunikat błędu (jeśli wystąpił)', null=True)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('config_used', models.ForeignKey(help_text='Konfiguracja używana do przygotowania bazy', on_delete=django.db.models.deletion.CASCADE, to='research_rag.ragconfiguration')),
            ],
            options={
                'verbose_name': 'Log przygotowania bazy',
                'verbose_name_plural': 'Logi przygotowania bazy',
                'ordering': ['-started_at'],
            },
        ),
    ]
